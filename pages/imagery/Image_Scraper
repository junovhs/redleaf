<html><head><base href="https://example.com/" target="_blank">
<title>Image Extractor</title>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }
  #source, #baseUrl {
    width: 100%;
    margin-bottom: 10px;
  }
  #output {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 30px;
  }
  .image-container {
    border: 1px solid #ccc;
    padding: 15px;
    text-align: center;
    background-color: #f9f9f9;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    border-radius: 5px;
  }
  .image-container img, .image-container svg {
    width: 200px;
    height: 200px;
    object-fit: contain;
    margin-bottom: 15px;
    background-color: white;
  }
  .toggle-bg {
    margin-right: 10px;
  }
  .image-info {
    font-size: 12px;
    margin-bottom: 10px;
  }
  button, a.download-btn {
    padding: 5px 10px;
    margin: 5px;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 3px;
    text-decoration: none;
    display: inline-block;
    font-size: 14px;
  }
  button:hover, a.download-btn:hover {
    background-color: #45a049;
  }
</style>
</head>
<body>
<h1>Image Extractor</h1>
<input type="text" id="baseUrl" placeholder="Enter base URL (e.g., https://example.com/)">
<textarea id="source" rows="10" placeholder="Paste your HTML source here"></textarea>
<button onclick="extractImages()">Extract Images</button>
<div id="output"></div>

<script>
function extractImages() {
  const baseUrl = document.getElementById('baseUrl').value;
  const source = document.getElementById('source').value;
  const output = document.getElementById('output');
  output.innerHTML = '';

  const parser = new DOMParser();
  const doc = parser.parseFromString(source, 'text/html');

  const images = [...doc.getElementsByTagName('img'), ...doc.getElementsByTagName('svg')];

  images.forEach((img, index) => {
    const container = document.createElement('div');
    container.className = 'image-container';

    const imageElement = img.cloneNode(true);
    if (img.tagName.toLowerCase() === 'img') {
      imageElement.src = new URL(img.src, baseUrl).href;
    }
    container.appendChild(imageElement);

    const imageInfo = document.createElement('div');
    imageInfo.className = 'image-info';
    imageInfo.textContent = `Original size: ${img.width}x${img.height}`;
    container.appendChild(imageInfo);

    const toggleButton = document.createElement('button');
    toggleButton.textContent = 'Toggle BG';
    toggleButton.className = 'toggle-bg';
    toggleButton.onclick = function() {
      imageElement.style.backgroundColor = imageElement.style.backgroundColor === 'black' ? 'white' : 'black';
    };
    container.appendChild(toggleButton);

    const downloadButton = document.createElement('a');
    downloadButton.textContent = 'Download';
    downloadButton.className = 'download-btn';
    downloadButton.href = imageElement.src || `data:image/svg+xml;charset=utf-8,${encodeURIComponent(imageElement.outerHTML)}`;
    downloadButton.download = `image_${index + 1}.${img.tagName.toLowerCase() === 'svg' ? 'svg' : 'png'}`;
    container.appendChild(downloadButton);

    output.appendChild(container);
  });
  
  adjustGridColumns();
}

function adjustGridColumns() {
  const output = document.getElementById('output');
  const containerWidth = output.offsetWidth;
  const columns = Math.floor(containerWidth / 250); // 220px for image container + 30px for gap
  output.style.gridTemplateColumns = `repeat(${columns}, 1fr)`;
}

window.addEventListener('resize', adjustGridColumns);
window.addEventListener('load', adjustGridColumns);
</script>
</body>
</html>
